import os
import json
import telebot
from telebot import types

# –ò–º–ø–æ—Ä—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä
from keyboards.settings_keyboards import (
    get_settings_menu_keyboard,
    get_profile_menu_keyboard,
    get_profile_edit_keyboard,
    get_interval_keyboard,
    get_confirmation_keyboard,
    get_back_keyboard,
    get_cancel_keyboard,
    get_connection_test_result_keyboard
)
from keyboards.main_menu_keyboard import get_main_menu_keyboard

# –ò–º–ø–æ—Ä—Ç —É—Ç–∏–ª–∏—Ç –∏ API
from utils import load_config, save_config, is_valid_interval
from api import get_instance_state

# –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∫–∞–∂–¥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
settings_data = {}

def register_settings_handlers(bot):
    """
    –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è —Ä–∞–∑–¥–µ–ª–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫.
    
    –ê—Ä–≥—É–º–µ–Ω—Ç—ã:
        bot (telebot.TeleBot): –≠–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞ Telegram.
    """
    # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º get_user_state –∏ set_user_state –∏–∑ main_menu_handlers
    from handlers.main_menu_handlers import get_user_state, set_user_state
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—Ö–æ–¥–∞ –≤ –º–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–µ–∫
    @bot.message_handler(func=lambda message: get_user_state(message.chat.id) == 'settings')
    def settings_menu_handler(message):
        chat_id = message.chat.id
        
        if message.text == 'üë§ –ü—Ä–æ—Ñ–∏–ª—å':
            set_user_state(chat_id, 'settings_profile')
            bot.send_message(
                chat_id, 
                "–†–∞–∑–¥–µ–ª —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª–µ–º Green API. –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
                reply_markup=get_profile_menu_keyboard()
            )
            
        elif message.text == '‚è±Ô∏è –ò–Ω—Ç–µ—Ä–≤–∞–ª':
            set_user_state(chat_id, 'settings_interval')
            
            # –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞
            interval_config = load_config(os.path.join('config', 'interval.json'))
            current_interval = interval_config.get('interval', 5) if interval_config else 5
            
            bot.send_message(
                chat_id, 
                f"–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞ –º–µ–∂–¥—É —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏ –ø—Ä–∏ —Ä–∞—Å—Å—ã–ª–∫–µ.\n\n"
                f"–¢–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: *{current_interval} —Å–µ–∫—É–Ω–¥*\n\n"
                f"–í—ã–±–µ—Ä–∏—Ç–µ –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –∏–ª–∏ –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 60:",
                reply_markup=get_interval_keyboard(),
                parse_mode='Markdown'
            )
            
        elif message.text == 'üîô –ù–∞–∑–∞–¥':
            set_user_state(chat_id, 'main_menu')
            bot.send_message(
                chat_id, 
                "–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é. –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
                reply_markup=get_main_menu_keyboard()
            )
            
        else:
            bot.send_message(
                chat_id, 
                "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏.",
                reply_markup=get_settings_menu_keyboard()
            )
    
    # === –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò –î–õ–Ø –†–ê–ó–î–ï–õ–ê –ü–†–û–§–ò–õ–Ø ===
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –º–µ–Ω—é –ø—Ä–æ—Ñ–∏–ª—è
    @bot.message_handler(func=lambda message: get_user_state(message.chat.id) == 'settings_profile')
    def profile_menu_handler(message):
        chat_id = message.chat.id
        
        if message.text == '‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å':
            set_user_state(chat_id, 'settings_profile_edit')
            bot.send_message(
                chat_id, 
                "–í—ã–±–µ—Ä–∏—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä –ø—Ä–æ—Ñ–∏–ª—è –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:",
                reply_markup=get_profile_edit_keyboard()
            )
            
        elif message.text == 'üîÑ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ':
            # –ó–∞–≥—Ä—É–∂–∞–µ–º –ø—Ä–æ—Ñ–∏–ª—å
            profile_config = load_config(os.path.join('config', 'profile.json'))
            
            if not profile_config:
                bot.send_message(
                    chat_id, 
                    "‚ùå –û—à–∏–±–∫–∞: –ø—Ä–æ—Ñ–∏–ª—å –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–Ω–∞—á–∞–ª–∞ –Ω–∞—Å—Ç—Ä–æ–π—Ç–µ –ø—Ä–æ—Ñ–∏–ª—å.",
                    reply_markup=get_profile_menu_keyboard()
                )
                return
            
            # –ü–æ–ª—É—á–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã API
            api_url = profile_config.get('apiUrl')
            id_instance = profile_config.get('idInstance')
            api_token = profile_config.get('apiTokenInstance')
            
            if not all([api_url, id_instance, api_token]):
                bot.send_message(
                    chat_id, 
                    "‚ùå –û—à–∏–±–∫–∞: –Ω–µ–ø–æ–ª–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø—Ä–æ—Ñ–∏–ª—è. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞—Å—Ç—Ä–æ–π—Ç–µ –≤—Å–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã.",
                    reply_markup=get_profile_menu_keyboard()
                )
                return
            
            # –ü—ã—Ç–∞–µ–º—Å—è –≤—ã–ø–æ–ª–Ω–∏—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
            bot.send_message(chat_id, "‚è≥ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å API...", reply_markup=types.ReplyKeyboardRemove())
            
            try:
                response = get_instance_state(api_url, id_instance, api_token)
                
                if response and response.get('stateInstance') in ['authorized', 'online']:
                    # –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ
                    success = True
                    bot.send_message(
                        chat_id, 
                        f"‚úÖ –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!\n\n"
                        f"üì± –ù–æ–º–µ—Ä WhatsApp: *{response.get('wid', '–ù–µ —É–∫–∞–∑–∞–Ω')}*\n"
                        f"üë§ –ò–º—è: *{response.get('name', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}*\n"
                        f"üîå –°—Ç–∞—Ç—É—Å: *{response.get('stateInstance', '–ù–µ —É–∫–∞–∑–∞–Ω')}*\n",
                        parse_mode='Markdown',
                        reply_markup=get_connection_test_result_keyboard(True)
                    )
                else:
                    # –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ, –Ω–æ —Å—Ç–∞—Ç—É—Å –Ω–µ authorized
                    success = False
                    state = response.get('stateInstance', '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ') if response else '–Ω–µ—Ç –æ—Ç–≤–µ—Ç–∞'
                    bot.send_message(
                        chat_id, 
                        f"‚ö†Ô∏è –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ, –Ω–æ —Å—Ç–∞—Ç—É—Å –∏–Ω—Å—Ç–∞–Ω—Å–∞: *{state}*\n"
                        f"–î–ª—è —Ä–∞–±–æ—Ç—ã —Ç—Ä–µ–±—É–µ—Ç—Å—è —Å—Ç–∞—Ç—É—Å *authorized* –∏–ª–∏ *online*.\n"
                        f"–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é –≤ Green API.",
                        parse_mode='Markdown',
                        reply_markup=get_connection_test_result_keyboard(False)
                    )
            except Exception as e:
                # –û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
                success = False
                bot.send_message(
                    chat_id, 
                    f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏ –∫ API: {str(e)}",
                    reply_markup=get_connection_test_result_keyboard(False)
                )
            
            # –ü–µ—Ä–µ–≤–æ–¥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
            set_user_state(chat_id, 'settings_connection_test_result')
            
        elif message.text == 'üîô –ù–∞–∑–∞–¥':
            set_user_state(chat_id, 'settings')
            bot.send_message(
                chat_id, 
                "–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª –Ω–∞—Å—Ç—Ä–æ–µ–∫:",
                reply_markup=get_settings_menu_keyboard()
            )
            
        else:
            bot.send_message(
                chat_id, 
                "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏.",
                reply_markup=get_profile_menu_keyboard()
            )
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
    @bot.message_handler(func=lambda message: get_user_state(message.chat.id) == 'settings_connection_test_result')
    def connection_test_result_handler(message):
        chat_id = message.chat.id
        
        if message.text == 'üîô –ù–∞–∑–∞–¥':
            set_user_state(chat_id, 'settings_profile')
            bot.send_message(
                chat_id, 
                "–†–∞–∑–¥–µ–ª —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª–µ–º. –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
                reply_markup=get_profile_menu_keyboard()
            )
        else:
            bot.send_message(
                chat_id, 
                "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É '–ù–∞–∑–∞–¥' –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é –ø—Ä–æ—Ñ–∏–ª—è.",
                reply_markup=get_back_keyboard()
            )
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –º–µ–Ω—é —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è
    @bot.message_handler(func=lambda message: get_user_state(message.chat.id) == 'settings_profile_edit')
    def profile_edit_handler(message):
        chat_id = message.chat.id
        
        # –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –ø—Ä–æ—Ñ–∏–ª—è –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        profile_params = {
            'üìù –ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è': 'name',
            'üîó API URL': 'apiUrl',
            'üîó Media URL': 'mediaUrl',
            'üÜî ID –∏–Ω—Å—Ç–∞–Ω—Å–∞': 'idInstance',
            'üîë API —Ç–æ–∫–µ–Ω –∏–Ω—Å—Ç–∞–Ω—Å–∞': 'apiTokenInstance'
        }
        
        if message.text in profile_params:
            param_key = profile_params[message.text]
            
            # –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–µ–∫—É—â–∏–π –ø—Ä–æ—Ñ–∏–ª—å
            profile_config = load_config(os.path.join('config', 'profile.json'))
            current_value = profile_config.get(param_key, '') if profile_config else ''
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
            settings_data[chat_id] = {
                'edit_parameter': param_key,
                'current_value': current_value
            }
            
            set_user_state(chat_id, 'settings_profile_edit_param')
            bot.send_message(
                chat_id, 
                f"–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞: *{message.text}*\n\n"
                f"–¢–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: `{current_value}`\n\n"
                f"–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ:",
                parse_mode='Markdown',
                reply_markup=get_cancel_keyboard()
            )
            
        elif message.text == 'üîô –ù–∞–∑–∞–¥':
            set_user_state(chat_id, 'settings_profile')
            bot.send_message(
                chat_id, 
                "–†–∞–∑–¥–µ–ª —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª–µ–º. –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
                reply_markup=get_profile_menu_keyboard()
            )
            
        else:
            bot.send_message(
                chat_id, 
                "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏.",
                reply_markup=get_profile_edit_keyboard()
            )
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–≤–æ–¥–∞ –∑–Ω–∞—á–µ–Ω–∏—è –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ –ø—Ä–æ—Ñ–∏–ª—è
    @bot.message_handler(func=lambda message: get_user_state(message.chat.id) == 'settings_profile_edit_param')
    def profile_param_input_handler(message):
        chat_id = message.chat.id
        
        if message.text == '‚ùå –û—Ç–º–µ–Ω–∏—Ç—å':
            set_user_state(chat_id, 'settings_profile_edit')
            bot.send_message(
                chat_id, 
                "–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ. –í—ã–±–µ—Ä–∏—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:",
                reply_markup=get_profile_edit_keyboard()
            )
            return
        
        if chat_id not in settings_data or 'edit_parameter' not in settings_data[chat_id]:
            bot.send_message(
                chat_id, 
                "‚ùå –û—à–∏–±–∫–∞: –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞—á–Ω–∏—Ç–µ –∑–∞–Ω–æ–≤–æ.",
                reply_markup=get_profile_edit_keyboard()
            )
            set_user_state(chat_id, 'settings_profile_edit')
            return
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
        settings_data[chat_id]['new_value'] = message.text
        param_name = settings_data[chat_id]['edit_parameter']
        
        # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
        bot.send_message(
            chat_id, 
            f"–í—ã —Å–æ–±–∏—Ä–∞–µ—Ç–µ—Å—å –∏–∑–º–µ–Ω–∏—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä *{param_name}*\n\n"
            f"–ù–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: `{message.text}`\n\n"
            f"–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ:",
            parse_mode='Markdown',
            reply_markup=get_confirmation_keyboard()
        )
        
        set_user_state(chat_id, 'settings_profile_confirm')
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ –ø—Ä–æ—Ñ–∏–ª—è
    @bot.message_handler(func=lambda message: get_user_state(message.chat.id) == 'settings_profile_confirm')
    def profile_confirm_handler(message):
        chat_id = message.chat.id
        
        if message.text == '‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å':
            if chat_id not in settings_data or 'edit_parameter' not in settings_data[chat_id] or 'new_value' not in settings_data[chat_id]:
                bot.send_message(
                    chat_id, 
                    "‚ùå –û—à–∏–±–∫–∞: –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞—á–Ω–∏—Ç–µ –∑–∞–Ω–æ–≤–æ.",
                    reply_markup=get_profile_edit_keyboard()
                )
                set_user_state(chat_id, 'settings_profile_edit')
                return
            
            # –ü–∞—Ä–∞–º–µ—Ç—Ä –∏ –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
            param_name = settings_data[chat_id]['edit_parameter']
            new_value = settings_data[chat_id]['new_value']
            
            # –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–µ–∫—É—â–∏–π –ø—Ä–æ—Ñ–∏–ª—å
            profile_path = os.path.join('config', 'profile.json')
            profile_config = load_config(profile_path)
            
            if not profile_config:
                profile_config = {}
            
            # –û–±–Ω–æ–≤–ª—è–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä
            profile_config[param_name] = new_value
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –ø—Ä–æ—Ñ–∏–ª—å
            success = save_config(profile_path, profile_config)
            
            if success:
                bot.send_message(
                    chat_id, 
                    f"‚úÖ –ü–∞—Ä–∞–º–µ—Ç—Ä *{param_name}* —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω.",
                    parse_mode='Markdown',
                    reply_markup=get_profile_edit_keyboard()
                )
            else:
                bot.send_message(
                    chat_id, 
                    f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ *{param_name}*. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.",
                    parse_mode='Markdown',
                    reply_markup=get_profile_edit_keyboard()
                )
            
            # –ß–∏—Å—Ç–∏–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
            if chat_id in settings_data:
                del settings_data[chat_id]
            
            # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—é –ø—Ä–æ—Ñ–∏–ª—è
            set_user_state(chat_id, 'settings_profile_edit')
            
        elif message.text == '‚ùå –û—Ç–º–µ–Ω–∏—Ç—å':
            # –ß–∏—Å—Ç–∏–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
            if chat_id in settings_data:
                del settings_data[chat_id]
                
            set_user_state(chat_id, 'settings_profile_edit')
            bot.send_message(
                chat_id, 
                "–ò–∑–º–µ–Ω–µ–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ. –í—ã–±–µ—Ä–∏—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:",
                reply_markup=get_profile_edit_keyboard()
            )
            
        else:
            bot.send_message(
                chat_id, 
                "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –∏–ª–∏ –æ—Ç–º–µ–Ω–∏—Ç–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞.",
                reply_markup=get_confirmation_keyboard()
            )
    
    # === –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò –î–õ–Ø –ò–ù–¢–ï–†–í–ê–õ–ê ===
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞
    @bot.message_handler(func=lambda message: get_user_state(message.chat.id) == 'settings_interval')
    def interval_handler(message):
        chat_id = message.chat.id
        
        if message.text == 'üîô –ù–∞–∑–∞–¥':
            set_user_state(chat_id, 'settings')
            bot.send_message(
                chat_id, 
                "–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª –Ω–∞—Å—Ç—Ä–æ–µ–∫:",
                reply_markup=get_settings_menu_keyboard()
            )
            return
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Ç–µ–∫—Å—Ç —á–∏—Å–ª–æ–º
        if message.text.isdigit() or message.text in ['2', '5', '10', '15', '30', '60']:
            interval = int(message.text)
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞
            if not is_valid_interval(interval):
                bot.send_message(
                    chat_id, 
                    "‚ùå –ù–µ–¥–æ–ø—É—Å—Ç–∏–º—ã–π –∏–Ω—Ç–µ—Ä–≤–∞–ª. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 60 —Å–µ–∫—É–Ω–¥.",
                    reply_markup=get_interval_keyboard()
                )
                return
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–æ–≤—ã–π –∏–Ω—Ç–µ—Ä–≤–∞–ª
            interval_path = os.path.join('config', 'interval.json')
            interval_config = {'interval': interval}
            
            success = save_config(interval_path, interval_config)
            
            if success:
                bot.send_message(
                    chat_id, 
                    f"‚úÖ –ò–Ω—Ç–µ—Ä–≤–∞–ª –º–µ–∂–¥—É —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏ —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –Ω–∞ *{interval} —Å–µ–∫—É–Ω–¥*.",
                    parse_mode='Markdown',
                    reply_markup=get_settings_menu_keyboard()
                )
                set_user_state(chat_id, 'settings')
            else:
                bot.send_message(
                    chat_id, 
                    "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.",
                    reply_markup=get_interval_keyboard()
                )
        else:
            bot.send_message(
                chat_id, 
                "‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 60 –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –ø—Ä–µ–¥—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤.",
                reply_markup=get_interval_keyboard()
            )