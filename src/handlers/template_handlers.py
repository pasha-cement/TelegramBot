import json
import uuid
import telebot
from telebot import types
import os

# –ò–º–ø–æ—Ä—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä
from keyboards.template_keyboards import (
    get_template_management_keyboard,
    get_template_list_keyboard,
    get_template_actions_keyboard,
    get_template_edit_keyboard,
    get_file_management_keyboard,
    get_confirmation_keyboard,
    get_back_keyboard,
    get_cancel_keyboard,
    get_template_pagination_keyboard
)
from keyboards.main_menu_keyboard import get_main_menu_keyboard

# –ò–º–ø–æ—Ä—Ç —É—Ç–∏–ª–∏—Ç
from utils import load_config, save_config, validate_file_path, get_file_extension

# –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö —à–∞–±–ª–æ–Ω–æ–≤ –∫–∞–∂–¥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
template_data = {}

def register_template_handlers(bot):
    """
    –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è —Ä–∞–∑–¥–µ–ª–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —à–∞–±–ª–æ–Ω–∞–º–∏.
    
    –ê—Ä–≥—É–º–µ–Ω—Ç—ã:
        bot (telebot.TeleBot): –≠–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞ Telegram.
    """
    # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º get_user_state –∏ set_user_state –∏–∑ main_menu_handlers
    from handlers.main_menu_handlers import get_user_state, set_user_state
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —à–∞–±–ª–æ–Ω–∞–º–∏
    @bot.message_handler(func=lambda message: get_user_state(message.chat.id) == 'templates')
    def template_management_handler(message):
        chat_id = message.chat.id
        
        if message.text == 'üìã –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å —à–∞–±–ª–æ–Ω—ã':
            # –ó–∞–≥—Ä—É–∂–∞–µ–º —à–∞–±–ª–æ–Ω—ã
            templates_config = load_config(os.path.join('config', 'templates.json'))
            
            if templates_config and 'templates' in templates_config and templates_config['templates']:
                templates = templates_config['templates']
                
                # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–ø–∏—Å–æ–∫ —à–∞–±–ª–æ–Ω–æ–≤ –≤–æ –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
                template_data[chat_id] = {'templates': templates}
                
                set_user_state(chat_id, 'templates_list')
                bot.send_message(
                    chat_id, 
                    f"–î–æ—Å—Ç—É–ø–Ω—ã–µ —à–∞–±–ª–æ–Ω—ã ({len(templates)}):\n–í—ã–±–µ—Ä–∏—Ç–µ —à–∞–±–ª–æ–Ω –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –¥–µ—Ç–∞–ª–µ–π:",
                    reply_markup=get_template_list_keyboard(templates)
                )
            else:
                bot.send_message(
                    chat_id, 
                    "üìÇ –£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö —à–∞–±–ª–æ–Ω–æ–≤. –í—ã –º–æ–∂–µ—Ç–µ —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π —à–∞–±–ª–æ–Ω.",
                    reply_markup=get_template_management_keyboard()
                )
                
        elif message.text == '‚ûï –°–æ–∑–¥–∞—Ç—å —à–∞–±–ª–æ–Ω':
            set_user_state(chat_id, 'templates_create_name')
            template_data[chat_id] = {'new_template': {}}
            
            bot.send_message(
                chat_id, 
                "–°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —à–∞–±–ª–æ–Ω–∞.\n–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —à–∞–±–ª–æ–Ω–∞:",
                reply_markup=get_cancel_keyboard()
            )
            
        elif message.text == 'üîô –ù–∞–∑–∞–¥':
            set_user_state(chat_id, 'main_menu')
            bot.send_message(
                chat_id, 
                "–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é. –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
                reply_markup=get_main_menu_keyboard()
            )
            
        else:
            bot.send_message(
                chat_id, 
                "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏.",
                reply_markup=get_template_management_keyboard()
            )
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–ø–∏—Å–∫–∞ —à–∞–±–ª–æ–Ω–æ–≤
    @bot.message_handler(func=lambda message: get_user_state(message.chat.id) == 'templates_list')
    def template_list_handler(message):
        chat_id = message.chat.id
        
        if message.text == 'üîô –ù–∞–∑–∞–¥':
            set_user_state(chat_id, 'templates')
            bot.send_message(
                chat_id, 
                "–†–∞–∑–¥–µ–ª —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —à–∞–±–ª–æ–Ω–∞–º–∏. –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
                reply_markup=get_template_management_keyboard()
            )
            return
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –≤—ã–±—Ä–∞–Ω –ª–∏ —à–∞–±–ª–æ–Ω –∏–∑ —Å–ø–∏—Å–∫–∞
        if chat_id not in template_data or 'templates' not in template_data[chat_id]:
            bot.send_message(
                chat_id, 
                "‚ùå –û—à–∏–±–∫–∞: —Å–ø–∏—Å–æ–∫ —à–∞–±–ª–æ–Ω–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–µ—Ä–Ω–∏—Ç–µ—Å—å –≤ —Ä–∞–∑–¥–µ–ª —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —à–∞–±–ª–æ–Ω–∞–º–∏.",
                reply_markup=get_template_management_keyboard()
            )
            set_user_state(chat_id, 'templates')
            return
        
        # –ò—â–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π —à–∞–±–ª–æ–Ω –ø–æ –∏–º–µ–Ω–∏
        selected_template = None
        for template in template_data[chat_id]['templates']:
            if template['name'] == message.text:
                selected_template = template
                break
        
        if not selected_template:
            bot.send_message(
                chat_id, 
                "‚ùå –®–∞–±–ª–æ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —à–∞–±–ª–æ–Ω –∏–∑ —Å–ø–∏—Å–∫–∞.",
                reply_markup=get_template_list_keyboard(template_data[chat_id]['templates'])
            )
            return
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π —à–∞–±–ª–æ–Ω
        template_data[chat_id]['selected_template'] = selected_template
        
        set_user_state(chat_id, 'templates_actions')
        bot.send_message(
            chat_id, 
            f"–®–∞–±–ª–æ–Ω: *{selected_template['name']}*\n\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
            parse_mode='Markdown',
            reply_markup=get_template_actions_keyboard()
        )
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–µ–π—Å—Ç–≤–∏–π —Å —à–∞–±–ª–æ–Ω–æ–º
    @bot.message_handler(func=lambda message: get_user_state(message.chat.id) == 'templates_actions')
    def template_actions_handler(message):
        chat_id = message.chat.id
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —à–∞–±–ª–æ–Ω–∞
        if chat_id not in template_data or 'selected_template' not in template_data[chat_id]:
            bot.send_message(
                chat_id, 
                "‚ùå –û—à–∏–±–∫–∞: —à–∞–±–ª–æ–Ω –Ω–µ –≤—ã–±—Ä–∞–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–µ—Ä–Ω–∏—Ç–µ—Å—å –∫ —Å–ø–∏—Å–∫—É —à–∞–±–ª–æ–Ω–æ–≤.",
                reply_markup=get_template_management_keyboard()
            )
            set_user_state(chat_id, 'templates')
            return
        
        selected_template = template_data[chat_id]['selected_template']
        
        if message.text == 'üëÅÔ∏è –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å':
            # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —à–∞–±–ª–æ–Ω–µ
            template_info = f"üìÑ *–®–∞–±–ª–æ–Ω:* {selected_template['name']}\n\n"
            template_info += f"üí¨ *–¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è:*\n```\n{selected_template['text']}\n```\n\n"
            
            # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ñ–∞–π–ª–µ
            if selected_template.get('hasFile', False) and selected_template.get('filePath'):
                file_path = selected_template['filePath']
                file_exists = os.path.exists(file_path)
                file_name = os.path.basename(file_path)
                file_status = "‚úÖ –î–æ—Å—Ç—É–ø–µ–Ω" if file_exists else "‚ùå –ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
                
                template_info += f"üìé *–ü—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω–Ω—ã–π —Ñ–∞–π–ª:*\n"
                template_info += f"–ò–º—è —Ñ–∞–π–ª–∞: {file_name}\n"
                template_info += f"–ü—É—Ç—å: `{file_path}`\n"
                template_info += f"–°—Ç–∞—Ç—É—Å: {file_status}"
            else:
                template_info += "üìé *–ü—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω–Ω—ã–π —Ñ–∞–π–ª:* –Ω–µ—Ç"
            
            bot.send_message(
                chat_id, 
                template_info,
                parse_mode='Markdown',
                reply_markup=get_template_actions_keyboard()
            )
            
        elif message.text == '‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å':
            set_user_state(chat_id, 'templates_edit')
            bot.send_message(
                chat_id, 
                f"–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —à–∞–±–ª–æ–Ω–∞: *{selected_template['name']}*\n\n"
                f"–í—ã–±–µ—Ä–∏—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è:",
                parse_mode='Markdown',
                reply_markup=get_template_edit_keyboard()
            )
            
        elif message.text == 'üóëÔ∏è –£–¥–∞–ª–∏—Ç—å':
            set_user_state(chat_id, 'templates_delete_confirm')
            bot.send_message(
                chat_id, 
                f"‚ö†Ô∏è –í—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —à–∞–±–ª–æ–Ω *{selected_template['name']}*?\n\n"
                f"–≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–ª—å–∑—è –æ—Ç–º–µ–Ω–∏—Ç—å.",
                parse_mode='Markdown',
                reply_markup=get_confirmation_keyboard()
            )
            
        elif message.text == 'üîô –ù–∞–∑–∞–¥':
            # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ —Å–ø–∏—Å–∫—É —à–∞–±–ª–æ–Ω–æ–≤
            if chat_id in template_data and 'templates' in template_data[chat_id]:
                set_user_state(chat_id, 'templates_list')
                bot.send_message(
                    chat_id, 
                    "–í—ã–±–µ—Ä–∏—Ç–µ —à–∞–±–ª–æ–Ω:",
                    reply_markup=get_template_list_keyboard(template_data[chat_id]['templates'])
                )
            else:
                set_user_state(chat_id, 'templates')
                bot.send_message(
                    chat_id, 
                    "–†–∞–∑–¥–µ–ª —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —à–∞–±–ª–æ–Ω–∞–º–∏. –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
                    reply_markup=get_template_management_keyboard()
                )
                
        else:
            bot.send_message(
                chat_id, 
                "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –∏–∑ —Å–ø–∏—Å–∫–∞.",
                reply_markup=get_template_actions_keyboard()
            )
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —É–¥–∞–ª–µ–Ω–∏—è —à–∞–±–ª–æ–Ω–∞
    @bot.message_handler(func=lambda message: get_user_state(message.chat.id) == 'templates_delete_confirm')
    def template_delete_confirm_handler(message):
        chat_id = message.chat.id
        
        if message.text == '‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å':
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —à–∞–±–ª–æ–Ω–∞
            if chat_id not in template_data or 'selected_template' not in template_data[chat_id]:
                bot.send_message(
                    chat_id, 
                    "‚ùå –û—à–∏–±–∫–∞: —à–∞–±–ª–æ–Ω –Ω–µ –≤—ã–±—Ä–∞–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–µ—Ä–Ω–∏—Ç–µ—Å—å –∫ —Å–ø–∏—Å–∫—É —à–∞–±–ª–æ–Ω–æ–≤.",
                    reply_markup=get_template_management_keyboard()
                )
                set_user_state(chat_id, 'templates')
                return
            
            selected_template = template_data[chat_id]['selected_template']
            
            # –ó–∞–≥—Ä—É–∂–∞–µ–º –≤—Å–µ —à–∞–±–ª–æ–Ω—ã
            templates_path = os.path.join('config', 'templates.json')
            templates_config = load_config(templates_path)
            
            if not templates_config or 'templates' not in templates_config:
                bot.send_message(
                    chat_id, 
                    "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —à–∞–±–ª–æ–Ω–æ–≤.",
                    reply_markup=get_template_management_keyboard()
                )
                set_user_state(chat_id, 'templates')
                return
            
            # –£–¥–∞–ª—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π —à–∞–±–ª–æ–Ω
            templates_config['templates'] = [t for t in templates_config['templates'] if t['id'] != selected_template['id']]
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ —à–∞–±–ª–æ–Ω–æ–≤
            success = save_config(templates_path, templates_config)
            
            if success:
                bot.send_message(
                    chat_id, 
                    f"‚úÖ –®–∞–±–ª–æ–Ω *{selected_template['name']}* —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω.",
                    parse_mode='Markdown',
                    reply_markup=get_template_management_keyboard()
                )
                set_user_state(chat_id, 'templates')
            else:
                bot.send_message(
                    chat_id, 
                    "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —à–∞–±–ª–æ–Ω–∞.",
                    reply_markup=get_template_management_keyboard()
                )
                set_user_state(chat_id, 'templates')
            
        elif message.text == '‚ùå –û—Ç–º–µ–Ω–∏—Ç—å':
            # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ –¥–µ–π—Å—Ç–≤–∏—è–º —Å —à–∞–±–ª–æ–Ω–æ–º
            set_user_state(chat_id, 'templates_actions')
            
            if chat_id in template_data and 'selected_template' in template_data[chat_id]:
                selected_template = template_data[chat_id]['selected_template']
                bot.send_message(
                    chat_id, 
                    f"–®–∞–±–ª–æ–Ω: *{selected_template['name']}*\n\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
                    parse_mode='Markdown',
                    reply_markup=get_template_actions_keyboard()
                )
            else:
                bot.send_message(
                    chat_id, 
                    "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
                    reply_markup=get_template_actions_keyboard()
                )
                
        else:
            bot.send_message(
                chat_id, 
                "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –∏–ª–∏ –æ—Ç–º–µ–Ω–∏—Ç–µ —É–¥–∞–ª–µ–Ω–∏–µ —à–∞–±–ª–æ–Ω–∞.",
                reply_markup=get_confirmation_keyboard()
            )
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –º–µ–Ω—é —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —à–∞–±–ª–æ–Ω–∞
    @bot.message_handler(func=lambda message: get_user_state(message.chat.id) == 'templates_edit')
    def template_edit_handler(message):
        chat_id = message.chat.id
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —à–∞–±–ª–æ–Ω–∞
        if chat_id not in template_data or 'selected_template' not in template_data[chat_id]:
            bot.send_message(
                chat_id, 
                "‚ùå –û—à–∏–±–∫–∞: —à–∞–±–ª–æ–Ω –Ω–µ –≤—ã–±—Ä–∞–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–µ—Ä–Ω–∏—Ç–µ—Å—å –∫ —Å–ø–∏—Å–∫—É —à–∞–±–ª–æ–Ω–æ–≤.",
                reply_markup=get_template_management_keyboard()
            )
            set_user_state(chat_id, 'templates')
            return
        
        selected_template = template_data[chat_id]['selected_template']
        
        if message.text == 'üìù –ò–∑–º–µ–Ω–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ':
            set_user_state(chat_id, 'templates_edit_name')
            bot.send_message(
                chat_id, 
                f"–¢–µ–∫—É—â–µ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —à–∞–±–ª–æ–Ω–∞: *{selected_template['name']}*\n\n"
                f"–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ:",
                parse_mode='Markdown',
                reply_markup=get_cancel_keyboard()
            )
            
        elif message.text == 'üìÑ –ò–∑–º–µ–Ω–∏—Ç—å —Ç–µ–∫—Å—Ç':
            set_user_state(chat_id, 'templates_edit_text')
            bot.send_message(
                chat_id, 
                f"–¢–µ–∫—É—â–∏–π —Ç–µ–∫—Å—Ç —à–∞–±–ª–æ–Ω–∞:\n```\n{selected_template['text']}\n```\n\n"
                f"–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π —Ç–µ–∫—Å—Ç:",
                parse_mode='Markdown',
                reply_markup=get_cancel_keyboard()
            )
            
        elif message.text == 'üìé –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–æ–º':
            set_user_state(chat_id, 'templates_edit_file')
            has_file = selected_template.get('hasFile', False)
            bot.send_message(
                chat_id, 
                f"–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–æ–º —à–∞–±–ª–æ–Ω–∞ *{selected_template['name']}*:",
                parse_mode='Markdown',
                reply_markup=get_file_management_keyboard(has_file)
            )
            
        elif message.text == 'üîô –ù–∞–∑–∞–¥':
            set_user_state(chat_id, 'templates_actions')
            bot.send_message(
                chat_id, 
                f"–®–∞–±–ª–æ–Ω: *{selected_template['name']}*\n\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
                parse_mode='Markdown',
                reply_markup=get_template_actions_keyboard()
            )
            
        else:
            bot.send_message(
                chat_id, 
                "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è.",
                reply_markup=get_template_edit_keyboard()
            )
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–∞–∑–≤–∞–Ω–∏—è —à–∞–±–ª–æ–Ω–∞
    @bot.message_handler(func=lambda message: get_user_state(message.chat.id) == 'templates_edit_name')
    def template_edit_name_handler(message):
        chat_id = message.chat.id
        
        if message.text == '‚ùå –û—Ç–º–µ–Ω–∏—Ç—å':
            set_user_state(chat_id, 'templates_edit')
            
            if chat_id in template_data and 'selected_template' in template_data[chat_id]:
                selected_template = template_data[chat_id]['selected_template']
                bot.send_message(
                    chat_id, 
                    f"–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —à–∞–±–ª–æ–Ω–∞: *{selected_template['name']}*\n\n"
                    f"–í—ã–±–µ—Ä–∏—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è:",
                    parse_mode='Markdown',
                    reply_markup=get_template_edit_keyboard()
                )
            else:
                bot.send_message(
                    chat_id, 
                    "–í—ã–±–µ—Ä–∏—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è:",
                    reply_markup=get_template_edit_keyboard()
                )
            return
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —à–∞–±–ª–æ–Ω–∞
        if chat_id not in template_data or 'selected_template' not in template_data[chat_id]:
            bot.send_message(
                chat_id, 
                "‚ùå –û—à–∏–±–∫–∞: —à–∞–±–ª–æ–Ω –Ω–µ –≤—ã–±—Ä–∞–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–µ—Ä–Ω–∏—Ç–µ—Å—å –∫ —Å–ø–∏—Å–∫—É —à–∞–±–ª–æ–Ω–æ–≤.",
                reply_markup=get_template_management_keyboard()
            )
            set_user_state(chat_id, 'templates')
            return
        
        # –û–±–Ω–æ–≤–ª—è–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ —à–∞–±–ª–æ–Ω–∞
        selected_template = template_data[chat_id]['selected_template']
        new_name = message.text
        
        # –ó–∞–≥—Ä—É–∂–∞–µ–º –≤—Å–µ —à–∞–±–ª–æ–Ω—ã
        templates_path = os.path.join('config', 'templates.json')
        templates_config = load_config(templates_path)
        
        if not templates_config or 'templates' not in templates_config:
            bot.send_message(
                chat_id, 
                "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —à–∞–±–ª–æ–Ω–æ–≤.",
                reply_markup=get_template_management_keyboard()
            )
            set_user_state(chat_id, 'templates')
            return
        
        # –û–±–Ω–æ–≤–ª—è–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —à–∞–±–ª–æ–Ω–∞
        for template in templates_config['templates']:
            if template['id'] == selected_template['id']:
                template['name'] = new_name
                # –û–±–Ω–æ–≤–ª—è–µ–º —Ç–∞–∫–∂–µ –≤ –ª–æ–∫–∞–ª—å–Ω–æ–π –∫–æ–ø–∏–∏
                selected_template['name'] = new_name
                break
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ —à–∞–±–ª–æ–Ω–æ–≤
        success = save_config(templates_path, templates_config)
        
        if success:
            bot.send_message(
                chat_id, 
                f"‚úÖ –ù–∞–∑–≤–∞–Ω–∏–µ —à–∞–±–ª–æ–Ω–∞ —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–æ –Ω–∞ *{new_name}*.",
                parse_mode='Markdown',
                reply_markup=get_template_edit_keyboard()
            )
            set_user_state(chat_id, 'templates_edit')
        else:
            bot.send_message(
                chat_id, 
                "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –Ω–∞–∑–≤–∞–Ω–∏—è —à–∞–±–ª–æ–Ω–∞.",
                reply_markup=get_template_edit_keyboard()
            )
            set_user_state(chat_id, 'templates_edit')
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ —à–∞–±–ª–æ–Ω–∞
    @bot.message_handler(func=lambda message: get_user_state(message.chat.id) == 'templates_edit_text')
    def template_edit_text_handler(message):
        chat_id = message.chat.id
        
        if message.text == '‚ùå –û—Ç–º–µ–Ω–∏—Ç—å':
            set_user_state(chat_id, 'templates_edit')
            
            if chat_id in template_data and 'selected_template' in template_data[chat_id]:
                selected_template = template_data[chat_id]['selected_template']
                bot.send_message(
                    chat_id, 
                    f"–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —à–∞–±–ª–æ–Ω–∞: *{selected_template['name']}*\n\n"
                    f"–í—ã–±–µ—Ä–∏—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è:",
                    parse_mode='Markdown',
                    reply_markup=get_template_edit_keyboard()
                )
            else:
                bot.send_message(
                    chat_id, 
                    "–í—ã–±–µ—Ä–∏—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è:",
                    reply_markup=get_template_edit_keyboard()
                )
            return
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —à–∞–±–ª–æ–Ω–∞
        if chat_id not in template_data or 'selected_template' not in template_data[chat_id]:
            bot.send_message(
                chat_id, 
                "‚ùå –û—à–∏–±–∫–∞: —à–∞–±–ª–æ–Ω –Ω–µ –≤—ã–±—Ä–∞–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–µ—Ä–Ω–∏—Ç–µ—Å—å –∫ —Å–ø–∏—Å–∫—É —à–∞–±–ª–æ–Ω–æ–≤.",
                reply_markup=get_template_management_keyboard()
            )
            set_user_state(chat_id, 'templates')
            return
        
        # –û–±–Ω–æ–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç —à–∞–±–ª–æ–Ω–∞
        selected_template = template_data[chat_id]['selected_template']
        new_text = message.text
        
        # –ó–∞–≥—Ä—É–∂–∞–µ–º –≤—Å–µ —à–∞–±–ª–æ–Ω—ã
        templates_path = os.path.join('config', 'templates.json')
        templates_config = load_config(templates_path)
        
        if not templates_config or 'templates' not in templates_config:
            bot.send_message(
                chat_id, 
                "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —à–∞–±–ª–æ–Ω–æ–≤.",
                reply_markup=get_template_management_keyboard()
            )
            set_user_state(chat_id, 'templates')
            return
        
        # –û–±–Ω–æ–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —à–∞–±–ª–æ–Ω–∞
        for template in templates_config['templates']:
            if template['id'] == selected_template['id']:
                template['text'] = new_text
                # –û–±–Ω–æ–≤–ª—è–µ–º —Ç–∞–∫–∂–µ –≤ –ª–æ–∫–∞–ª—å–Ω–æ–π –∫–æ–ø–∏–∏
                selected_template['text'] = new_text
                break
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ —à–∞–±–ª–æ–Ω–æ–≤
        success = save_config(templates_path, templates_config)
        
        if success:
            bot.send_message(
                chat_id, 
                "‚úÖ –¢–µ–∫—Å—Ç —à–∞–±–ª–æ–Ω–∞ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω.",
                reply_markup=get_template_edit_keyboard()
            )
            set_user_state(chat_id, 'templates_edit')
        else:
            bot.send_message(
                chat_id, 
                "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Ç–µ–∫—Å—Ç–∞ —à–∞–±–ª–æ–Ω–∞.",
                reply_markup=get_template_edit_keyboard()
            )
            set_user_state(chat_id, 'templates_edit')
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ñ–∞–π–ª–æ–º —à–∞–±–ª–æ–Ω–∞
    @bot.message_handler(func=lambda message: get_user_state(message.chat.id) == 'templates_edit_file')
    def template_edit_file_handler(message):
        chat_id = message.chat.id
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —à–∞–±–ª–æ–Ω–∞
        if chat_id not in template_data or 'selected_template' not in template_data[chat_id]:
            bot.send_message(
                chat_id, 
                "‚ùå –û—à–∏–±–∫–∞: —à–∞–±–ª–æ–Ω –Ω–µ –≤—ã–±—Ä–∞–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–µ—Ä–Ω–∏—Ç–µ—Å—å –∫ —Å–ø–∏—Å–∫—É —à–∞–±–ª–æ–Ω–æ–≤.",
                reply_markup=get_template_management_keyboard()
            )
            set_user_state(chat_id, 'templates')
            return
        
        selected_template = template_data[chat_id]['selected_template']
        has_file = selected_template.get('hasFile', False)
        
        if message.text == 'üëÅÔ∏è –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ñ–∞–π–ª' and has_file:
            file_path = selected_template.get('filePath', '')
            
            if not file_path or not os.path.exists(file_path):
                bot.send_message(
                    chat_id, 
                    f"‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω –ø–æ –ø—É—Ç–∏: {file_path}",
                    reply_markup=get_file_management_keyboard(has_file)
                )
                return
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–∞–π–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞
            try:
                file_ext = os.path.splitext(file_path)[1].lower()
                
                with open(file_path, 'rb') as file:
                    if file_ext in ['.jpg', '.jpeg', '.png', '.gif']:
                        bot.send_photo(chat_id, file)
                    elif file_ext in ['.mp4', '.avi', '.mov']:
                        bot.send_video(chat_id, file)
                    elif file_ext in ['.mp3', '.ogg', '.wav']:
                        bot.send_audio(chat_id, file)
                    else:
                        bot.send_document(chat_id, file)
                
                bot.send_message(
                    chat_id, 
                    f"üìÑ –§–∞–π–ª: {os.path.basename(file_path)}",
                    reply_markup=get_file_management_keyboard(has_file)
                )
            except Exception as e:
                bot.send_message(
                    chat_id, 
                    f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–∞–π–ª–∞: {str(e)}",
                    reply_markup=get_file_management_keyboard(has_file)
                )
            
        elif message.text == 'üîÑ –ó–∞–º–µ–Ω–∏—Ç—å —Ñ–∞–π–ª' and has_file:
            set_user_state(chat_id, 'templates_replace_file')
            bot.send_message(
                chat_id, 
                "–ó–∞–≥—Ä—É–∑–∏—Ç–µ –Ω–æ–≤—ã–π —Ñ–∞–π–ª, –∫–æ—Ç–æ—Ä—ã–π –∑–∞–º–µ–Ω–∏—Ç —Ç–µ–∫—É—â–∏–π:",
                reply_markup=get_cancel_keyboard()
            )
            
        elif message.text == 'üóëÔ∏è –£–¥–∞–ª–∏—Ç—å —Ñ–∞–π–ª' and has_file:
            set_user_state(chat_id, 'templates_delete_file_confirm')
            bot.send_message(
                chat_id, 
                "‚ö†Ô∏è –í—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —Ñ–∞–π–ª –∏–∑ —à–∞–±–ª–æ–Ω–∞?",
                reply_markup=get_confirmation_keyboard()
            )
            
        elif message.text == '‚ûï –î–æ–±–∞–≤–∏—Ç—å —Ñ–∞–π–ª' and not has_file:
            set_user_state(chat_id, 'templates_add_file')
            bot.send_message(
                chat_id, 
                "–ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–∞–π–ª, –∫–æ—Ç–æ—Ä—ã–π –Ω—É–∂–Ω–æ –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç—å –∫ —à–∞–±–ª–æ–Ω—É:",
                reply_markup=get_cancel_keyboard()
            )
            
        elif message.text == 'üîô –ù–∞–∑–∞–¥':
            set_user_state(chat_id, 'templates_edit')
            bot.send_message(
                chat_id, 
                f"–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —à–∞–±–ª–æ–Ω–∞: *{selected_template['name']}*\n\n"
                f"–í—ã–±–µ—Ä–∏—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è:",
                parse_mode='Markdown',
                reply_markup=get_template_edit_keyboard()
            )
            
        else:
            bot.send_message(
                chat_id, 
                "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –∏–∑ —Å–ø–∏—Å–∫–∞.",
                reply_markup=get_file_management_keyboard(has_file)
            )
                         
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —É–¥–∞–ª–µ–Ω–∏—è —Ñ–∞–π–ª–∞
    @bot.message_handler(func=lambda message: get_user_state(message.chat.id) == 'templates_delete_file_confirm')
    def template_delete_file_confirm_handler(message):
        chat_id = message.chat.id
        
        if message.text == '‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å':
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —à–∞–±–ª–æ–Ω–∞
            if chat_id not in template_data or 'selected_template' not in template_data[chat_id]:
                bot.send_message(
                    chat_id, 
                    "‚ùå –û—à–∏–±–∫–∞: —à–∞–±–ª–æ–Ω –Ω–µ –≤—ã–±—Ä–∞–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–µ—Ä–Ω–∏—Ç–µ—Å—å –∫ —Å–ø–∏—Å–∫—É —à–∞–±–ª–æ–Ω–æ–≤.",
                    reply_markup=get_template_management_keyboard()
                )
                set_user_state(chat_id, 'templates')
                return
            
            # –ó–∞–≥—Ä—É–∂–∞–µ–º –≤—Å–µ —à–∞–±–ª–æ–Ω—ã
            templates_path = os.path.join('config', 'templates.json')
            templates_config = load_config(templates_path)
            
            if not templates_config or 'templates' not in templates_config:
                bot.send_message(
                    chat_id, 
                    "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —à–∞–±–ª–æ–Ω–æ–≤.",
                    reply_markup=get_template_management_keyboard()
                )
                set_user_state(chat_id, 'templates')
                return
            
            # –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ —à–∞–±–ª–æ–Ω–∞ (—É–¥–∞–ª—è–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ —Ñ–∞–π–ª)
            selected_template = template_data[chat_id]['selected_template']
            for template in templates_config['templates']:
                if template['id'] == selected_template['id']:
                    template['hasFile'] = False
                    template['filePath'] = None
                    # –û–±–Ω–æ–≤–ª—è–µ–º —Ç–∞–∫–∂–µ –≤ –ª–æ–∫–∞–ª—å–Ω–æ–π –∫–æ–ø–∏–∏
                    selected_template['hasFile'] = False
                    selected_template['filePath'] = None
                    break
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ —à–∞–±–ª–æ–Ω–æ–≤
            success = save_config(templates_path, templates_config)
            
            if success:
                bot.send_message(
                    chat_id, 
                    "‚úÖ –§–∞–π–ª —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω –∏–∑ —à–∞–±–ª–æ–Ω–∞.",
                    reply_markup=get_file_management_keyboard(False)
                )
                set_user_state(chat_id, 'templates_edit_file')
            else:
                bot.send_message(
                    chat_id, 
                    "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞ –∏–∑ —à–∞–±–ª–æ–Ω–∞.",
                    reply_markup=get_file_management_keyboard(True)
                )
                set_user_state(chat_id, 'templates_edit_file')
            
        elif message.text == '‚ùå –û—Ç–º–µ–Ω–∏—Ç—å':
            set_user_state(chat_id, 'templates_edit_file')
            
            if chat_id in template_data and 'selected_template' in template_data[chat_id]:
                selected_template = template_data[chat_id]['selected_template']
                has_file = selected_template.get('hasFile', False)
                bot.send_message(
                    chat_id, 
                    f"–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–æ–º —à–∞–±–ª–æ–Ω–∞ *{selected_template['name']}*:",
                    parse_mode='Markdown',
                    reply_markup=get_file_management_keyboard(has_file)
                )
            else:
                bot.send_message(
                    chat_id, 
                    "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–æ–º —à–∞–±–ª–æ–Ω–∞:",
                    reply_markup=get_file_management_keyboard(False)
                )
        else:
            bot.send_message(
                chat_id, 
                "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –∏–ª–∏ –æ—Ç–º–µ–Ω–∏—Ç–µ —É–¥–∞–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–∞.",
                reply_markup=get_confirmation_keyboard()
            )
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∫ —à–∞–±–ª–æ–Ω—É
    @bot.message_handler(content_types=['document', 'photo', 'video', 'audio'],
                        func=lambda message: get_user_state(message.chat.id) == 'templates_add_file')
    def template_add_file_handler(message):
        chat_id = message.chat.id
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —à–∞–±–ª–æ–Ω–∞
        if chat_id not in template_data or 'selected_template' not in template_data[chat_id]:
            bot.send_message(
                chat_id, 
                "‚ùå –û—à–∏–±–∫–∞: —à–∞–±–ª–æ–Ω –Ω–µ –≤—ã–±—Ä–∞–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–µ—Ä–Ω–∏—Ç–µ—Å—å –∫ —Å–ø–∏—Å–∫—É —à–∞–±–ª–æ–Ω–æ–≤.",
                reply_markup=get_template_management_keyboard()
            )
            set_user_state(chat_id, 'templates')
            return
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –º–µ–¥–∏–∞ –∏ –ø–æ–ª—É—á–∞–µ–º file_id
        if message.content_type == 'document':
            file_id = message.document.file_id
            file_name = message.document.file_name
            file_type = 'document'
        elif message.content_type == 'photo':
            file_id = message.photo[-1].file_id  # –ë–µ—Ä–µ–º —Ñ–æ—Ç–æ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ —Ä–∞–∑–º–µ—Ä–∞
            file_name = f"photo_{file_id}.jpg"
            file_type = 'photo'
        elif message.content_type == 'video':
            file_id = message.video.file_id
            file_name = message.video.file_name if message.video.file_name else f"video_{file_id}.mp4"
            file_type = 'video'
        elif message.content_type == 'audio':
            file_id = message.audio.file_id
            file_name = message.audio.file_name if message.audio.file_name else f"audio_{file_id}.mp3"
            file_type = 'audio'
        
        # –°–∫–∞—á–∏–≤–∞–µ–º —Ñ–∞–π–ª
        file_info = bot.get_file(file_id)
        downloaded_file = bot.download_file(file_info.file_path)
        
        # –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É files, –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
        os.makedirs('files', exist_ok=True)
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–π–ª
        file_path = os.path.join('files', file_name)
        with open(file_path, 'wb') as file:
            file.write(downloaded_file)
        
        # –ó–∞–≥—Ä—É–∂–∞–µ–º –≤—Å–µ —à–∞–±–ª–æ–Ω—ã
        templates_path = os.path.join('config', 'templates.json')
        templates_config = load_config(templates_path)
        
        if not templates_config or 'templates' not in templates_config:
            bot.send_message(
                chat_id, 
                "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —à–∞–±–ª–æ–Ω–æ–≤.",
                reply_markup=get_template_management_keyboard()
            )
            set_user_state(chat_id, 'templates')
            return
        
        # –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ —à–∞–±–ª–æ–Ω–∞ (–¥–æ–±–∞–≤–ª—è–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ —Ñ–∞–π–ª)
        selected_template = template_data[chat_id]['selected_template']
        for template in templates_config['templates']:
            if template['id'] == selected_template['id']:
                template['hasFile'] = True
                template['filePath'] = file_path
                # –û–±–Ω–æ–≤–ª—è–µ–º —Ç–∞–∫–∂–µ –≤ –ª–æ–∫–∞–ª—å–Ω–æ–π –∫–æ–ø–∏–∏
                selected_template['hasFile'] = True
                selected_template['filePath'] = file_path
                break
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ —à–∞–±–ª–æ–Ω–æ–≤
        success = save_config(templates_path, templates_config)
        
        if success:
            bot.send_message(
                chat_id, 
                f"‚úÖ –§–∞–π–ª —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω –∫ —à–∞–±–ª–æ–Ω—É: {file_name}",
                reply_markup=get_file_management_keyboard(True)
            )
            set_user_state(chat_id, 'templates_edit_file')
        else:
            bot.send_message(
                chat_id, 
                "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞ –∫ —à–∞–±–ª–æ–Ω—É.",
                reply_markup=get_file_management_keyboard(False)
            )
            set_user_state(chat_id, 'templates_edit_file')
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞ –ø—Ä–∏ –∑–∞–º–µ–Ω–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ
    @bot.message_handler(content_types=['document', 'photo', 'video', 'audio'],
                        func=lambda message: get_user_state(message.chat.id) == 'templates_replace_file')
    def template_replace_file_handler(message):
        chat_id = message.chat.id
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —à–∞–±–ª–æ–Ω–∞
        if chat_id not in template_data or 'selected_template' not in template_data[chat_id]:
            bot.send_message(
                chat_id, 
                "‚ùå –û—à–∏–±–∫–∞: —à–∞–±–ª–æ–Ω –Ω–µ –≤—ã–±—Ä–∞–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–µ—Ä–Ω–∏—Ç–µ—Å—å –∫ —Å–ø–∏—Å–∫—É —à–∞–±–ª–æ–Ω–æ–≤.",
                reply_markup=get_template_management_keyboard()
            )
            set_user_state(chat_id, 'templates')
            return
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –º–µ–¥–∏–∞ –∏ –ø–æ–ª—É—á–∞–µ–º file_id
        if message.content_type == 'document':
            file_id = message.document.file_id
            file_name = message.document.file_name
            file_type = 'document'
        elif message.content_type == 'photo':
            file_id = message.photo[-1].file_id  # –ë–µ—Ä–µ–º —Ñ–æ—Ç–æ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ —Ä–∞–∑–º–µ—Ä–∞
            file_name = f"photo_{file_id}.jpg"
            file_type = 'photo'
        elif message.content_type == 'video':
            file_id = message.video.file_id
            file_name = message.video.file_name if message.video.file_name else f"video_{file_id}.mp4"
            file_type = 'video'
        elif message.content_type == 'audio':
            file_id = message.audio.file_id
            file_name = message.audio.file_name if message.audio.file_name else f"audio_{file_id}.mp3"
            file_type = 'audio'
        
        # –°–∫–∞—á–∏–≤–∞–µ–º —Ñ–∞–π–ª
        file_info = bot.get_file(file_id)
        downloaded_file = bot.download_file(file_info.file_path)
        
        # –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É files, –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
        os.makedirs('files', exist_ok=True)
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–π–ª
        file_path = os.path.join('files', file_name)
        with open(file_path, 'wb') as file:
            file.write(downloaded_file)
        
        # –ó–∞–≥—Ä—É–∂–∞–µ–º –≤—Å–µ —à–∞–±–ª–æ–Ω—ã
        templates_path = os.path.join('config', 'templates.json')
        templates_config = load_config(templates_path)
        
        if not templates_config or 'templates' not in templates_config:
            bot.send_message(
                chat_id, 
                "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —à–∞–±–ª–æ–Ω–æ–≤.",
                reply_markup=get_template_management_keyboard()
            )
            set_user_state(chat_id, 'templates')
            return
        
        # –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ —à–∞–±–ª–æ–Ω–∞ (–º–µ–Ω—è–µ–º –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É)
        selected_template = template_data[chat_id]['selected_template']
        for template in templates_config['templates']:
            if template['id'] == selected_template['id']:
                template['filePath'] = file_path
                # –û–±–Ω–æ–≤–ª—è–µ–º —Ç–∞–∫–∂–µ –≤ –ª–æ–∫–∞–ª—å–Ω–æ–π –∫–æ–ø–∏–∏
                selected_template['filePath'] = file_path
                break
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ —à–∞–±–ª–æ–Ω–æ–≤
        success = save_config(templates_path, templates_config)
        
        if success:
            bot.send_message(
                chat_id, 
                f"‚úÖ –§–∞–π–ª —É—Å–ø–µ—à–Ω–æ –∑–∞–º–µ–Ω–µ–Ω –Ω–∞: {file_name}",
                reply_markup=get_file_management_keyboard(True)
            )
            set_user_state(chat_id, 'templates_edit_file')
        else:
            bot.send_message(
                chat_id, 
                "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–º–µ–Ω–µ —Ñ–∞–π–ª–∞.",
                reply_markup=get_file_management_keyboard(True)
            )
            set_user_state(chat_id, 'templates_edit_file')

    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–º–µ–Ω—ã –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞
    @bot.message_handler(func=lambda message: message.text == '‚ùå –û—Ç–º–µ–Ω–∏—Ç—å' and
                         (get_user_state(message.chat.id) == 'templates_add_file' or
                          get_user_state(message.chat.id) == 'templates_replace_file'))
    def cancel_file_upload_handler(message):
        chat_id = message.chat.id
        
        set_user_state(chat_id, 'templates_edit_file')
        
        if chat_id in template_data and 'selected_template' in template_data[chat_id]:
            selected_template = template_data[chat_id]['selected_template']
            has_file = selected_template.get('hasFile', False)
            bot.send_message(
                chat_id, 
                f"–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–æ–º —à–∞–±–ª–æ–Ω–∞ *{selected_template['name']}*:",
                parse_mode='Markdown',
                reply_markup=get_file_management_keyboard(has_file)
            )
        else:
            bot.send_message(
                chat_id, 
                "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–æ–º —à–∞–±–ª–æ–Ω–∞:",
                reply_markup=get_file_management_keyboard(False)
            )

    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ —à–∞–±–ª–æ–Ω–∞
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–≤–æ–¥–∞ –∏–º–µ–Ω–∏ –Ω–æ–≤–æ–≥–æ —à–∞–±–ª–æ–Ω–∞
    @bot.message_handler(func=lambda message: get_user_state(message.chat.id) == 'templates_create_name')
    def template_create_name_handler(message):
        chat_id = message.chat.id
        
        if message.text == '‚ùå –û—Ç–º–µ–Ω–∏—Ç—å':
            set_user_state(chat_id, 'templates')
            # –û—á–∏—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Å–æ–∑–¥–∞–Ω–∏—è —à–∞–±–ª–æ–Ω–∞
            if chat_id in template_data and 'new_template' in template_data[chat_id]:
                del template_data[chat_id]['new_template']
            
            bot.send_message(
                chat_id, 
                "–°–æ–∑–¥–∞–Ω–∏–µ —à–∞–±–ª–æ–Ω–∞ –æ—Ç–º–µ–Ω–µ–Ω–æ. –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
                reply_markup=get_template_management_keyboard()
            )
            return
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —à–∞–±–ª–æ–Ω–∞
        if chat_id not in template_data:
            template_data[chat_id] = {}
        if 'new_template' not in template_data[chat_id]:
            template_data[chat_id]['new_template'] = {}
        
        template_data[chat_id]['new_template']['name'] = message.text
        
        # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –≤–≤–æ–¥—É —Ç–µ–∫—Å—Ç–∞ —à–∞–±–ª–æ–Ω–∞
        set_user_state(chat_id, 'templates_create_text')
        bot.send_message(
            chat_id, 
            "–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç —à–∞–±–ª–æ–Ω–∞:",
            reply_markup=get_cancel_keyboard()
        )
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–≤–æ–¥–∞ —Ç–µ–∫—Å—Ç–∞ –Ω–æ–≤–æ–≥–æ —à–∞–±–ª–æ–Ω–∞
    @bot.message_handler(func=lambda message: get_user_state(message.chat.id) == 'templates_create_text')
    def template_create_text_handler(message):
        chat_id = message.chat.id
        
        if message.text == '‚ùå –û—Ç–º–µ–Ω–∏—Ç—å':
            set_user_state(chat_id, 'templates')
            # –û—á–∏—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Å–æ–∑–¥–∞–Ω–∏—è —à–∞–±–ª–æ–Ω–∞
            if chat_id in template_data and 'new_template' in template_data[chat_id]:
                del template_data[chat_id]['new_template']
            
            bot.send_message(
                chat_id, 
                "–°–æ–∑–¥–∞–Ω–∏–µ —à–∞–±–ª–æ–Ω–∞ –æ—Ç–º–µ–Ω–µ–Ω–æ. –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
                reply_markup=get_template_management_keyboard()
            )
            return
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—Å—Ç –Ω–æ–≤–æ–≥–æ —à–∞–±–ª–æ–Ω–∞
        if chat_id not in template_data or 'new_template' not in template_data[chat_id]:
            bot.send_message(
                chat_id, 
                "‚ùå –û—à–∏–±–∫–∞: –¥–∞–Ω–Ω—ã–µ –æ —Å–æ–∑–¥–∞–≤–∞–µ–º–æ–º —à–∞–±–ª–æ–Ω–µ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.",
                reply_markup=get_template_management_keyboard()
            )
            set_user_state(chat_id, 'templates')
            return
        
        template_data[chat_id]['new_template']['text'] = message.text
        
        # –°–ø—Ä–∞—à–∏–≤–∞–µ–º, –Ω—É–∂–Ω–æ –ª–∏ –¥–æ–±–∞–≤–∏—Ç—å —Ñ–∞–π–ª
        set_user_state(chat_id, 'templates_create_file_query')
        bot.send_message(
            chat_id, 
            "–•–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å —Ñ–∞–π–ª –∫ —à–∞–±–ª–æ–Ω—É?",
            reply_markup=get_confirmation_keyboard()
        )
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–∞ –∫ –Ω–æ–≤–æ–º—É —à–∞–±–ª–æ–Ω—É
    @bot.message_handler(func=lambda message: get_user_state(message.chat.id) == 'templates_create_file_query')
    def template_create_file_query_handler(message):
        chat_id = message.chat.id
        
        if message.text == '‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å':
            set_user_state(chat_id, 'templates_create_add_file')
            bot.send_message(
                chat_id, 
                "–ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–∞–π–ª –¥–ª—è —à–∞–±–ª–æ–Ω–∞ (–∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ, –≤–∏–¥–µ–æ, –¥–æ–∫—É–º–µ–Ω—Ç –∏ —Ç.–¥.):",
                reply_markup=get_cancel_keyboard()
            )
            
        elif message.text == '‚ùå –û—Ç–º–µ–Ω–∏—Ç—å':
            # –°–æ–∑–¥–∞–µ–º —à–∞–±–ª–æ–Ω –±–µ–∑ —Ñ–∞–π–ª–∞
            create_new_template(bot, chat_id, False)
            
        else:
            bot.send_message(
                chat_id, 
                "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –≤—ã–±–æ—Ä–∞.",
                reply_markup=get_confirmation_keyboard()
            )
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞ –¥–ª—è –Ω–æ–≤–æ–≥–æ —à–∞–±–ª–æ–Ω–∞
    @bot.message_handler(content_types=['document', 'photo', 'video', 'audio'],
                        func=lambda message: get_user_state(message.chat.id) == 'templates_create_add_file')
    def template_create_add_file_handler(message):
        chat_id = message.chat.id
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –º–µ–¥–∏–∞ –∏ –ø–æ–ª—É—á–∞–µ–º file_id
        if message.content_type == 'document':
            file_id = message.document.file_id
            file_name = message.document.file_name
            file_type = 'document'
        elif message.content_type == 'photo':
            file_id = message.photo[-1].file_id  # –ë–µ—Ä–µ–º —Ñ–æ—Ç–æ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ —Ä–∞–∑–º–µ—Ä–∞
            file_name = f"photo_{file_id}.jpg"
            file_type = 'photo'
        elif message.content_type == 'video':
            file_id = message.video.file_id
            file_name = message.video.file_name if message.video.file_name else f"video_{file_id}.mp4"
            file_type = 'video'
        elif message.content_type == 'audio':
            file_id = message.audio.file_id
            file_name = message.audio.file_name if message.audio.file_name else f"audio_{file_id}.mp3"
            file_type = 'audio'
        
        # –°–∫–∞—á–∏–≤–∞–µ–º —Ñ–∞–π–ª
        file_info = bot.get_file(file_id)
        downloaded_file = bot.download_file(file_info.file_path)
        
        # –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É files, –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
        os.makedirs('files', exist_ok=True)
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–π–ª
        file_path = os.path.join('files', file_name)
        with open(file_path, 'wb') as file:
            file.write(downloaded_file)
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É
        if chat_id not in template_data or 'new_template' not in template_data[chat_id]:
            bot.send_message(
                chat_id, 
                "‚ùå –û—à–∏–±–∫–∞: –¥–∞–Ω–Ω—ã–µ –æ —Å–æ–∑–¥–∞–≤–∞–µ–º–æ–º —à–∞–±–ª–æ–Ω–µ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.",
                reply_markup=get_template_management_keyboard()
            )
            set_user_state(chat_id, 'templates')
            return
        
        template_data[chat_id]['new_template']['filePath'] = file_path
        
        # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π —à–∞–±–ª–æ–Ω —Å —Ñ–∞–π–ª–æ–º
        create_new_template(bot, chat_id, True)
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–º–µ–Ω—ã —Å–æ–∑–¥–∞–Ω–∏—è —à–∞–±–ª–æ–Ω–∞ —Å —Ñ–∞–π–ª–æ–º
    @bot.message_handler(func=lambda message: message.text == '‚ùå –û—Ç–º–µ–Ω–∏—Ç—å' and
                         get_user_state(message.chat.id) == 'templates_create_add_file')
    def cancel_template_create_file_handler(message):
        chat_id = message.chat.id
        
        # –°–æ–∑–¥–∞–µ–º —à–∞–±–ª–æ–Ω –±–µ–∑ —Ñ–∞–π–ª–∞
        create_new_template(bot, chat_id, False)

def create_new_template(bot, chat_id, with_file=False):
    """
    –°–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—ã–π —à–∞–±–ª–æ–Ω –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –µ–≥–æ –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏.
    
    –ê—Ä–≥—É–º–µ–Ω—Ç—ã:
        bot (telebot.TeleBot): –≠–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞ Telegram.
        chat_id (int): ID —á–∞—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
        with_file (bool): –§–ª–∞–≥ –Ω–∞–ª–∏—á–∏—è —Ñ–∞–π–ª–∞.
    """
    # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º set_user_state –∏–∑ main_menu_handlers
    from handlers.main_menu_handlers import set_user_state
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –¥–∞–Ω–Ω—ã—Ö —à–∞–±–ª–æ–Ω–∞
    if chat_id not in template_data or 'new_template' not in template_data[chat_id]:
        bot.send_message(
            chat_id, 
            "‚ùå –û—à–∏–±–∫–∞: –¥–∞–Ω–Ω—ã–µ –æ —Å–æ–∑–¥–∞–≤–∞–µ–º–æ–º —à–∞–±–ª–æ–Ω–µ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.",
            reply_markup=get_template_management_keyboard()
        )
        set_user_state(chat_id, 'templates')
        return
    
    new_template = template_data[chat_id]['new_template']
    
    if 'name' not in new_template or 'text' not in new_template:
        bot.send_message(
            chat_id, 
            "‚ùå –û—à–∏–±–∫–∞: –Ω–µ–ø–æ–ª–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —à–∞–±–ª–æ–Ω–∞.",
            reply_markup=get_template_management_keyboard()
        )
        set_user_state(chat_id, 'templates')
        return
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —à–∞–±–ª–æ–Ω—ã
    templates_path = os.path.join('config', 'templates.json')
    templates_config = load_config(templates_path)
    
    if not templates_config:
        templates_config = {'templates': []}
    elif 'templates' not in templates_config:
        templates_config['templates'] = []
    
    # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π —à–∞–±–ª–æ–Ω
    template = {
        'id': str(uuid.uuid4()),
        'name': new_template['name'],
        'text': new_template['text'],
        'hasFile': with_file,
        'filePath': new_template.get('filePath') if with_file else None
    }
    
    # –î–æ–±–∞–≤–ª—è–µ–º —à–∞–±–ª–æ–Ω –≤ —Å–ø–∏—Å–æ–∫
    templates_config['templates'].append(template)
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ —à–∞–±–ª–æ–Ω–æ–≤
    success = save_config(templates_path, templates_config)
    
    if success:
        bot.send_message(
            chat_id, 
            f"‚úÖ –®–∞–±–ª–æ–Ω *{new_template['name']}* —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω.",
            parse_mode='Markdown',
            reply_markup=get_template_management_keyboard()
        )
    else:
        bot.send_message(
            chat_id, 
            "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —à–∞–±–ª–æ–Ω–∞.",
            reply_markup=get_template_management_keyboard()
        )
    
    # –û—á–∏—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Å–æ–∑–¥–∞–Ω–∏—è —à–∞–±–ª–æ–Ω–∞
    del template_data[chat_id]['new_template']
    
    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –º–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —à–∞–±–ª–æ–Ω–∞–º–∏
    set_user_state(chat_id, 'templates')